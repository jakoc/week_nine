name: DevOps Pipeline

permissions:
  contents: write
  packages: write
  id-token: write
  actions: write

on:
  push:
    branches:
      - master

jobs:
  delivery:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Application Version
        id: semver-app
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Docker Image
        run: |
          docker build \
            -t ghcr.io/${{ github.repository }}:staging \
            -t ghcr.io/${{ github.repository }}:${{ steps.semver-app.outputs.version }} \
            -f DevOpsWebApplication/Dockerfile \
            .
          docker push ghcr.io/${{ github.repository }} --all-tags

      - name: Deliver Docker Compose file to staging
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          source: "compose.yaml"
          target: dowa/

      - name: Run Docker Compose on staging server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          script: |
            cd dowa
            docker compose pull
            docker compose up -d

  deployment:
    needs: delivery  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # Du kan ikke benytte semver-app, da det step ligger i et andet job. Derfor bliver version-nummeret tomt, og tagget ugyldigt.
      # Derfor bør du indsætte versions-steppet en gang til :)
      # Det er heller ikke nødvendigt at builde docker en gang til - det har du allerede gjort, og der ligger en version vi ved fungerer.
      # Den version kan vi "forfremme" til produktion med følgende kode:
      #
      #  - name: Promote Docker Image
      #  run: |
      #    docker pull ghcr.io/${{ github.repository }}:${{ steps.semver-app.outputs.version }}
      #    docker tag ghcr.io/${{ github.repository }}:${{ steps.semver-app.outputs.version }} ghcr.io/${{ github.repository }}:production
      #    docker push ghcr.io/${{ github.repository }} --all-tags

      - name: Build and Push Docker Image for Production
        run: |
          docker build \
            -t ghcr.io/${{ github.repository }}:production \
            -t ghcr.io/${{ github.repository }}:${{ steps.semver-app.outputs.version }}-prod \
            -f DevOpsWebApplication/Dockerfile \
            .
          docker push ghcr.io/${{ github.repository }} --all-tags

      # Herefter skal der laves en ekstra docker-compose-fil, der peget på "production"-tagget i stedet for staging.
      # Det er så den nye compose-fil der skal kopieres til produktions-serveren, og køres derude.
      - name: Deliver Docker Compose file to production
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.PRODUCTION_SERVER_IP }}
          username: ${{ vars.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.PRODUCTION_SERVER_SSH_KEY }}
          source: "compose.yaml"
          target: /var/www/dowa/

      - name: Run Docker Compose on production server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.PRODUCTION_SERVER_IP }}
          username: ${{ vars.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.PRODUCTION_SERVER_SSH_KEY }}
          script: |
            cd /var/www/dowa/
            docker compose pull
            docker compose up -d
